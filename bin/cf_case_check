#!/usr/bin/env ruby

require File.expand_path(
    File.join(File.dirname(__FILE__), %w[.. lib case_check]))

module CaseCheck

class Checker
  def initialize(config_file, root)
    @config = Configuration.new(config_file)
    $stderr.print "Reading source files "
    @sources = Dir["#{root}/**/*.cf[mc]"].collect do |f|
      $stderr.print '.'
      ColdfusionSource.create(f)
    end
    $stderr.puts
    $stderr.print "Analyzing "
    @sources.each do |s|
      $stderr.print '.'
      s.analyze
    end
    $stderr.puts "\n"
  end
  
  def print_report(out=$stdout)
    $stderr.puts @sources.inject(0) { |c, s| c + s.internal_references.size }
    @sources.select { |s| !s.unresolved_internal_references.empty? || !s.case_insensitive_internal_references.empty? }.each do |s|
      out.puts s.filename
      s.internal_references.each do |ir|
        out.puts " #{bullet(ir)} #{ir.message}"
      end
    end
  end
  
  def bullet(ir)
    case ir.resolution
    when :exact
      '-'
    when :case_insensitive
      '+'
    else
      '*'
    end
  end
end

end


CaseCheck::Checker.new('cf_case_check.yml', 'webroot').print_report
